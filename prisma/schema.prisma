generator client {
  provider = "prisma-client-js"
  output = "../src/external/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("REACT_APP_DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  name          String?
  image         String?
  accounts      Account[]
  sessions      Session[]

  checklist     CheckList[] 
}


model Account {
  id                 String  @id @default(cuid())
  userId             String 
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  refresh_token_expires_in   Int?
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String 
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model CheckList {
    id        Int      @id @default(autoincrement()) 
    name      String 
    type      String   
    createdAt DateTime @default(now())
    userId    String     
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    checklistCategory  CheckListCategory[]

    @@index([userId])
}

model CheckListCategory {
    id           Int      @id @default(autoincrement()) 
    name         String 
    order        Int 
    isFolded     Boolean 
    totalCount   Int
    checkCount   Int 
    createdAt    DateTime @default(now())
    checklistId  Int 
    checklist    CheckList     @relation(fields: [checklistId], references: [id], onDelete: Cascade)

    checklistItem       CheckListItem[] 

    @@index([checklistId])
}

model CheckListItem {
    id          Int      @id @default(autoincrement()) 
    name        String 
    order       Int 
    isChecked   Boolean 
    createdAt   DateTime @default(now())
    categoryId  Int 
    category    CheckListCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)

    @@index([categoryId])
}
